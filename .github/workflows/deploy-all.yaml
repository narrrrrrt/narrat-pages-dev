name: Deploy DO + Pages (ordered)

on:
  push:
    branches: ['**']          # すべてのブランチ
    paths:
      - 'public/**'
      - 'functions/**'
      - 'workers/do-worker/**'
      - '.github/workflows/deploy-all.yaml'
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      do_changed: ${{ steps.changes.outputs.do }}
      pages_changed: ${{ steps.changes.outputs.pages }}
    steps:
      - uses: actions/checkout@v4

      # 変更検出（Pages と DO を分けて判定）
      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            do:
              - 'workers/do-worker/**'
            pages:
              - 'public/**'
              - 'functions/**'

      # デバッグ（安全な複数行 run）
      - name: Debug – changed flags
        run: |
          echo "BRANCH=${GITHUB_REF_NAME}"
          echo "DO_CHANGED=${{ steps.changes.outputs.do }}"
          echo "PAGES_CHANGED=${{ steps.changes.outputs.pages }}"

  deploy_do:
    runs-on: ubuntu-latest
    needs: detect
    if: needs.detect.outputs.do_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy Durable Object (wrangler)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: workers/do-worker
          command: deploy

  deploy_pages:
    runs-on: ubuntu-latest
    needs: [detect, deploy_do]     # DO が変わってる時は DO → Pages の順
    if: needs.detect.outputs.pages_changed == 'true' || needs.detect.outputs.do_changed == 'true'
    env:
      BRANCH: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Debug – branch for Pages
        run: |
          echo "Deploying Pages project=${{ secrets.CF_PAGES_PROJECT }} on branch=${BRANCH}"

      - name: Deploy Cloudflare Pages (wrangler)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: |
            pages deploy ./public \
              --project-name ${{ secrets.CF_PAGES_PROJECT }} \
              --branch "${{ env.BRANCH }}"